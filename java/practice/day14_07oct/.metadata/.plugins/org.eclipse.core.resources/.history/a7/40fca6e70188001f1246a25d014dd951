package com.cdac;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Function;  // java.util.function is package and Function is Interface and almost all interfaces are in java.util.function package

public class LambdaPractice {

	public static void main(String[] args) {
		System.out.println("Hello Programmer :)");
		Student s1 = new Student(12,"Ram");
		Student s2 = new Student(42,"Shyam");
		Student s3 = new Student(98,"Ramesh");
		Student s4 = new Student(45,"Kartik");
		Student s5 = new Student(19,"Yash");
		
		List<Student> sl = new ArrayList<>();
		sl.add(s1);
		sl.add(s2);
		sl.add(s3);
		sl.add(s4);
		sl.add(s5);
		
		for(Student s:sl) {
			System.out.println(s);
		}
		
		//lambda for "R apply(T r)" of "Interface Function<T,​R>" interface
		Function<Student, String> getNameApply = (std)-> std.getName();
		System.out.println("\n*********Student Names*********");
		for(Student s:sl) {
			System.out.println(getNameApply.apply(s));
		}
		
		//lambda for "R apply(T r)" of "Interface Function<T,​R>" interface
		Function<Student, Integer> getrNoApply = (std)-> std.getrNo();
		System.out.println("\n*********Student roll numbers*********");
		for(Student s:sl) {
			System.out.println(getrNoApply.apply(s));
		}
	}

}
